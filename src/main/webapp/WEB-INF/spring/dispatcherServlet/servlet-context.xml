<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security-3.1.xsd">

<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
     
	<context:component-scan base-package="com.controller"/>
	<mvc:annotation-driven/>
 
 	<!--
	Important for @Secured annotations to work.
	Here we enable all three of them - @Secured, @PreAuthorize and @RolesAllowed. You may choose what you use.
	Check MainRestController for examples.
	 -->
	<security:global-method-security secured-annotations="enabled" pre-post-annotations="enabled" jsr250-annotations="enabled"/>

	<!-- Just to host static resources, like: http://localhost:8080/respsec/res/random.jpg -->
	<mvc:resources mapping="/res/**" location="/static/"/>

	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		p:prefix="/WEB-INF/view/" p:suffix=".jsp"/>


<!--     Configure to plugin JSON as request and response in method handler -->
<!--     <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"> -->
<!--         <property name="messageConverters"> -->
<!--             <list> -->
<!--                 <ref bean="jsonMessageConverter"/> -->
<!--             </list> -->
<!--         </property> -->
<!--     </bean> -->
     
<!--     Configure bean to convert JSON to POJO and vice versa -->
<!--     <bean id="jsonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"> -->
<!--     </bean>  -->
     
</beans>